%{
#include <stdio.h>
#include <stdlib.h>

void yyerror(const char *s);
int yylex();

#define YYSTYPE int
%}

%token NUMBER

%left '+' '-'
%left '*' '/'
%right UMINUS

%%
input: /* empty */
    | input line
    ;

line: expr '\n' { printf("Postfix: %d\n", $1); }
    ;

expr: NUMBER
    | expr '+' expr { $$ = $1 + $3; printf("+ "); }
    | expr '-' expr { $$ = $1 - $3; printf("- "); }
    | expr '*' expr { $$ = $1 * $3; printf("* "); }
    | expr '/' expr { $$ = $1 / $3; printf("/ "); }
    | '-' expr %prec UMINUS { $$ = -$2; printf("UMINUS "); }
    | '(' expr ')' { $$ = $2; }
    ;

%%

void yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
}

int main() {
    yyparse();
    return 0;
}
